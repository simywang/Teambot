version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    environment:
      POSTGRES_DB: loi_database
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3978:3978"
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3978
      - API_PORT=3000
      - DATABASE_HOST=postgres
      - DATABASE_PORT=5432
      - DATABASE_NAME=loi_database
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=postgres
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/loi_database
      - FRONTEND_URL=http://localhost:3001
    env_file:
      - backend/.env
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend/src:/app/src
    command: npm run dev

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - VITE_API_URL=http://localhost:3000
      - VITE_SOCKET_URL=http://localhost:3000
    volumes:
      - ./frontend/src:/app/src
    command: npm run dev

volumes:
  postgres_data:

