╔══════════════════════════════════════════════════════════════╗
║         🚀 快速部署到 GitHub - 命令清单                      ║
╚══════════════════════════════════════════════════════════════╝

📝 第一步：在 GitHub 创建仓库
────────────────────────────────────────────────────────────────
1. 访问: https://github.com/new
2. Repository name: TeamsBot
3. Public，不要勾选 README
4. 点击 Create repository


🔑 第二步：获取 Token（如果还没有）
────────────────────────────────────────────────────────────────
1. 访问: https://github.com/settings/tokens
2. Generate new token (classic)
3. 勾选 repo 权限
4. 复制保存 token


📤 第三步：推送代码（复制这些命令）
────────────────────────────────────────────────────────────────
cd /Users/ximinwang/Documents/TeamsBot

# 添加远程仓库（⚠️ 把 YOUR_USERNAME 改成你的 GitHub 用户名）
git remote add origin https://github.com/YOUR_USERNAME/TeamsBot.git

# 查看是否添加成功
git remote -v

# 推送代码
git branch -M main
git push -u origin main

# 输入：
# Username: 你的 GitHub 用户名
# Password: 刚才复制的 token


🌐 第四步：启用 GitHub Pages
────────────────────────────────────────────────────────────────
1. 访问: https://github.com/YOUR_USERNAME/TeamsBot
2. 点击 Settings → Pages
3. Source 选择: GitHub Actions
4. 保存


🔧 第五步：配置部署路径（重要！）
────────────────────────────────────────────────────────────────
# 编辑这个文件（在你最喜欢的编辑器中）:
open /Users/ximinwang/Documents/TeamsBot/.github/workflows/deploy-github-pages.yml

# 找到第 32-37 行，把这段：
      - name: Build for Demo Mode
        run: |
          cd frontend
          echo "VITE_DEMO_MODE=true" > .env.production
          npm run build

# 改成这样（⚠️ 把 /TeamsBot/ 改成你的仓库名）：
      - name: Build for Demo Mode
        run: |
          cd frontend
          echo "VITE_DEMO_MODE=true" > .env.production
          echo "VITE_BASE_PATH=/TeamsBot/" >> .env.production
          npm run build

# 保存后运行：
cd /Users/ximinwang/Documents/TeamsBot
git add .github/workflows/deploy-github-pages.yml
git commit -m "配置 GitHub Pages 部署路径"
git push


⏳ 第六步：等待部署完成
────────────────────────────────────────────────────────────────
1. 访问: https://github.com/YOUR_USERNAME/TeamsBot/actions
2. 等待 2-3 分钟直到显示 ✅


🎉 完成！访问你的网站
────────────────────────────────────────────────────────────────
https://YOUR_USERNAME.github.io/TeamsBot/

把这个链接分享给同事！


🔄 以后更新代码
────────────────────────────────────────────────────────────────
cd /Users/ximinwang/Documents/TeamsBot
git add .
git commit -m "描述你的修改"
git push

# 2-3 分钟后网站自动更新


💡 更简单的方案：使用 Vercel
────────────────────────────────────────────────────────────────
1. 访问 https://vercel.com
2. 用 GitHub 登录
3. Import Repository → 选择 TeamsBot
4. 配置：
   - Root Directory: frontend
   - Framework: Vite
   - Environment: VITE_DEMO_MODE=true
5. Deploy

URL: https://teams-bot-你的名字.vercel.app


🆘 常见问题
────────────────────────────────────────────────────────────────
Q: 推送失败 "Permission denied"
A: 检查 token 是否有 repo 权限

Q: 网页显示 404
A: 检查 VITE_BASE_PATH 是否配置正确

Q: 网页空白
A: 打开 F12 查看错误，通常是路径问题

Q: Actions 失败
A: 查看 Actions 日志，可能是依赖安装失败


📞 需要帮助？
────────────────────────────────────────────────────────────────
查看详细指南：
cat /Users/ximinwang/Documents/TeamsBot/部署到GitHub.md

或者直接问我！


╔══════════════════════════════════════════════════════════════╗
║  🎯 记得把所有的 YOUR_USERNAME 改成你的实际 GitHub 用户名！  ║
╚══════════════════════════════════════════════════════════════╝

